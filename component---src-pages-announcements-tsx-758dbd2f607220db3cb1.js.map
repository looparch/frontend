{"version":3,"file":"component---src-pages-announcements-tsx-758dbd2f607220db3cb1.js","mappings":"kLAyCA,IA9B6BA,IAKK,IALJ,KAC5BC,EAAI,YACJC,EAAW,MACXC,EAAK,YACLC,GAC0BJ,EAC1B,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAE,GAAKN,EAAQO,UAAU,sBAC7BH,EAAAA,cAAA,OAAKG,UAAU,4EACbH,EAAAA,cAACI,EAAAA,EAAW,CACVC,MAAOR,EACPS,IAAQR,EAAK,oBACbK,UAAU,qGAEZH,EAAAA,cAAA,OAAKG,UAAU,gGACfH,EAAAA,cAAA,OAAKG,UAAU,2DACbH,EAAAA,cAAA,MAAIG,UAAU,oFACXL,GAEHE,EAAAA,cAAA,OAAKG,UAAU,mFACbH,EAAAA,cAAA,KAAGG,UAAU,+CAA+CJ,OAKnE,C,+EC9BQ,SAASQ,EAAMZ,GAA6B,IAA5B,SAAEa,GAAuBb,EACtD,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACS,EAAAA,MAAK,CAACC,MAAM,WACbV,EAAAA,cAAA,QAAMG,UAAU,qEAAqEK,GACrFR,EAAAA,cAACS,EAAAA,MAAK,CAACC,MAAM,WAGnB,C,sGCkBA,MA/BiCC,KAC/B,MAAQC,WAAW,MAAEC,KAAYC,EAAAA,EAAAA,gBAAe,cA2BhD,OAAOD,CAAK,E,SCwBd,MA3B0BE,KACxB,MAAMC,EAAgBL,IAEtB,OACEX,EAAAA,cAACO,EAAAA,EAAM,KACLP,EAAAA,cAAA,OAAKG,UAAU,uDACbH,EAAAA,cAAA,MAAIG,UAAU,oEAAmE,iBAGjFH,EAAAA,cAAA,WAASG,UAAU,iEAChBa,EAAcC,KAAKC,GAEhBlB,EAAAA,cAACmB,EAAAA,EAAoB,CACnBC,IAAKF,EAAKG,GACVzB,KAAI,kBAAoBsB,EAAKI,KAC7BzB,YAAaqB,EAAKK,UAAUC,gBAC5B1B,MAAOoB,EAAKpB,MACZC,YAAamB,EAAKO,KAAKC,oBAAoBC,cAM9C,C","sources":["webpack://loop-architectural-materials/./src/components/card-title-description.tsx","webpack://loop-architectural-materials/./src/components/layout.tsx","webpack://loop-architectural-materials/./src/hooks/use-all-published-blog-posts.ts","webpack://loop-architectural-materials/./src/pages/announcements.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype CardTitleDescriptionProps = {\n  link: string\n  gatsbyImage: IGatsbyImageData\n  title: string\n  description?: any\n}\n\nconst CardTitleDescription = ({\n  link,\n  gatsbyImage,\n  title,\n  description,\n}: CardTitleDescriptionProps) => {\n  return (\n    <>\n      <Link to={`${link}`} className=\"grid grid-flow-row\">\n        <div className=\"relative block overflow-hidden bg-gray-100 rounded-md h-60 lg:h-72 group\">\n          <GatsbyImage\n            image={gatsbyImage}\n            alt={`${title} Background Image`}\n            className=\"!absolute object-cover object-center w-full h-full transition duration-500 group-hover:scale-110\"\n          />\n          <div className=\"absolute inset-0 z-10 bg-[#000000] opacity-40 transition duration-500 group-hover:opacity-0\" />\n          <div className=\"absolute z-20 grid w-full h-full grid-rows-2 text-white\">\n            <h3 className=\"text-2xl font-bold leading-none transitional-product-card-inner place-self-start\">\n              {title}\n            </h3>\n            <div className=\"text-base font-normal transition duration-500 place-self-end justify-self-start\">\n              <p className=\"transitional-product-card-inner-description\">{description}</p>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </>\n  )\n}\n\nexport default CardTitleDescription\n","import React from 'react'\nimport { Slice } from 'gatsby'\n\ntype LayoutProps = {\n  children: JSX.Element\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <>\n      <Slice alias=\"navbar\" />\n      <main className=\"w-full min-h-full mx-auto bg-white max-w-7xl print:bg-transparent\">{children}</main>\n      <Slice alias=\"footer\" />\n    </>\n  )\n}\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useAllPublishedBlogPosts = () => {\n  const { blogPosts: { nodes } } = useStaticQuery(graphql`\n    query AllPublishedBlogPostsQuery {\n      blogPosts: allContentfulBlogPost(sort: {publishDate: DESC}) {\n        nodes {\n          id\n          title\n          slug\n          heroImage {\n            gatsbyImageData\n          }\n          description {\n            childMarkdownRemark {\n              html\n              excerpt\n            }\n          }\n          body {\n            childMarkdownRemark {\n              html\n              excerpt\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return nodes\n}\n\nexport default useAllPublishedBlogPosts\n","import * as React from 'react'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport Layout from '../components/layout'\nimport useAllPublishedBlogPosts from '../hooks/use-all-published-blog-posts'\nimport CardTitleDescription from '../components/card-title-description'\n\ntype ArticleProps = {\n  id: string\n  title: string\n  slug: string\n  heroImage: {\n    gatsbyImageData: IGatsbyImageData\n  }\n  description: {\n    childMarkdownRemark: {\n      html: string\n      excerpt: string\n    }\n  }\n  body: {\n    childMarkdownRemark: {\n      html: string\n      excerpt: string\n    }\n  }\n}\n\nconst AnnouncementsPage = () => {\n  const announcements = useAllPublishedBlogPosts()\n\n  return (\n    <Layout>\n      <div className=\"max-w-6xl px-4 py-6 mx-auto sm:px-6 lg:py-8 lg:px-8\">\n        <h1 className=\"mt-2 mb-8 text-3xl font-bold tracking-tight md:mb-12 sm:text-4xl\">\n          Announcements\n        </h1>\n        <article className=\"grid grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-3 md:gap-4\">\n          {announcements.map((item: ArticleProps) => {\n            return (\n              <CardTitleDescription\n                key={item.id}\n                link={`/announcements/${item.slug}`}\n                gatsbyImage={item.heroImage.gatsbyImageData}\n                title={item.title}\n                description={item.body.childMarkdownRemark.excerpt}\n              />\n            )\n          })}\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport default AnnouncementsPage\n"],"names":["_ref","link","gatsbyImage","title","description","React","Link","to","className","GatsbyImage","image","alt","Layout","children","Slice","alias","useAllPublishedBlogPosts","blogPosts","nodes","useStaticQuery","AnnouncementsPage","announcements","map","item","CardTitleDescription","key","id","slug","heroImage","gatsbyImageData","body","childMarkdownRemark","excerpt"],"sourceRoot":""}