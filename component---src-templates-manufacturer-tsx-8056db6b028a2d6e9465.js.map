{"version":3,"file":"component---src-templates-manufacturer-tsx-8056db6b028a2d6e9465.js","mappings":"8QAKe,SAASA,EAAYC,GAClC,OACEC,EAAAA,cAAA,MAAIC,UAAU,SACZD,EAAAA,cAACE,EAAAA,KAAI,CACHC,GAAE,IAAMJ,EAAQK,aAAaC,KAAI,IAAIN,EAAQM,KAC7CJ,UAAU,oHAEVD,EAAAA,cAACM,EAAAA,EAAW,CACVC,MACER,EAAQS,gBAAgBC,UAAUC,gBAAgBC,gBAEpDC,IAAQb,EAAQc,MAAK,aACrBZ,UAAU,2FAEXF,EAAQe,QACPd,EAAAA,cAAA,QAAMC,UAAU,+GAA8G,OAIhID,EAAAA,cAAA,OAAKC,UAAU,gGACfD,EAAAA,cAAA,OAAKC,UAAU,uJACZF,EAAQc,QAKnB,C,cCzBe,SAASE,EAAiBX,GACvC,MAAM,MAAES,EAAK,YAAEG,EAAW,WAAEC,EAAU,KAAEC,GAASd,EAC3Ce,EAAmBC,EAAAA,EAAMhB,EAAaC,MAE5C,OACEL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,+BACbD,EAAAA,cAAA,OAAKC,UAAU,uCACbD,EAAAA,cAACM,EAAAA,EAAW,CACVC,MAAOU,EAAWR,UAAUC,gBAAgBC,gBAC5CC,IAAQC,EAAK,UACbZ,UAAU,eACVoB,MAAO,CAAEC,SAAU,SAErBtB,EAAAA,cAAA,OACEC,UAAU,wFACVoB,MAAO,CAAEC,SAAU,QAEnBtB,EAAAA,cAACmB,EAAgB,CAAClB,UAAU,4EAG9BD,EAAAA,cAAA,OACEC,UAAU,kDACVoB,MAAO,CAAEC,SAAU,WAM/B,C,uBCiEA,MA9EqBC,IAIJ,IAHfC,MACEC,UAAU,aAAErB,KAEJmB,EACV,OACEvB,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAACe,EAAqBX,GA6BtBJ,EAAAA,cAAC2B,EAAAA,EAAa,KACZ3B,EAAAA,cAAA,MACE4B,KAAK,OACL3B,UAAU,uFAEVD,EAAAA,cAAA,MAAIC,UAAU,wEACZD,EAAAA,cAAA,OAAKC,UAAU,4DACbD,EAAAA,cAAC6B,EAAAA,EAAa,KAAEzB,EAAaY,cAE/BhB,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,KACEkB,KAAMd,EAAac,KACnBY,IAAI,WACJC,OAAO,SACP9B,UAAU,UAEVD,EAAAA,cAAA,QAAMC,UAAU,WAAU,kBAAqB,QAAM,IACpDG,EAAaS,MACdb,EAAAA,cAAA,QAAMC,UAAU,WAAU,eAE5BD,EAAAA,cAACE,EAAAA,KAAI,CACHC,GAAE,0BAA4BC,EAAaS,MAC3CZ,UAAU,oBAEVD,EAAAA,cAAA,QAAMC,UAAU,WAAU,+BACKG,EAAaS,OACrC,aAKZT,EAAa4B,SAASC,KAAKlC,GACnBC,EAAAA,cAACF,EAAWoC,OAAAC,OAAA,GAAKpC,EAAO,CAAEqC,IAAKrC,EAAQsC,WAK/C,EAMN,MAAMC,EAAOC,IAAA,IAClBf,MACEC,UAAU,aAAErB,IACb,SACDoC,GACUD,EAAA,OACVvC,EAAAA,cAACyC,EAAAA,EAAG,CAAC5B,MAAK,GAAKT,EAAaS,MAAS6B,SAAUF,EAASE,UAAY,C","sources":["webpack://loop-architectural-materials/./src/components/product-card.tsx","webpack://loop-architectural-materials/./src/components/manufacturer-hero.tsx","webpack://loop-architectural-materials/./src/templates/manufacturer.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { IProduct } from '../types'\n\nexport default function ProductCard(product: IProduct) {\n  return (\n    <li className=\"group\">\n      <Link\n        to={`/${product.manufacturer.slug}/${product.slug}`}\n        className=\"relative block overflow-hidden transition duration-500 bg-gray-100 rounded-md h-72 md:h-80 group-hover:shadow-md\"\n      >\n        <GatsbyImage\n          image={\n            product.image_thumbnail.imageFile.childImageSharp.gatsbyImageData\n          }\n          alt={`${product.title} Thumbnail`}\n          className=\"object-cover object-center w-full h-full transition duration-500 group-hover:scale-110\"\n        />\n        {product.is_new && (\n          <span className=\"bg-red-400 text-white z-20 text-sm tracking-wider uppercase rounded-br-md absolute left-0 top-0 px-3 py-1.5\">\n            New\n          </span>\n        )}\n        <div className=\"absolute inset-0 z-10 bg-[#000000] opacity-20 transition duration-500 group-hover:opacity-0\" />\n        <div className=\"absolute bottom-0 z-20 p-2 m-2 text-2xl font-bold leading-none text-white transition duration-500 w-fit group-hover:text-black group-hover:bg-white\">\n          {product.title}\n        </div>\n      </Link>\n    </li>\n  )\n}\n","import * as React from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport ReactMarkdown from 'react-markdown'\nimport type { IManufacturer } from '../types'\nimport Logos from './logos'\n\nexport default function ManufacturerHero(manufacturer: IManufacturer) {\n  const { title, description, image_hero, href } = manufacturer\n  const ManufacturerLogo = Logos[manufacturer.slug]\n\n  return (\n    <>\n      <div className=\"w-full h-[50vh] md:h-[50vh]\">\n        <div className=\"grid w-full h-full mx-auto md:px-0 \">\n          <GatsbyImage\n            image={image_hero.imageFile.childImageSharp.gatsbyImageData}\n            alt={`${title} Banner`}\n            className=\"object-cover\"\n            style={{ gridArea: '1/1' }}\n          />\n          <div\n            className=\"z-20 flex items-center content-center justify-center w-full h-full p-6 mx-auto md:p-0\"\n            style={{ gridArea: '1/1' }}\n          >\n            <ManufacturerLogo className=\"absolute w-3/4 mx-auto md:w-1/2 2xl:w-1/5 place-self-center fill-white\" />\n          </div>\n\n          <div\n            className=\"z-10 bg-[#000000] opacity-30 mix-blend-multiply\"\n            style={{ gridArea: '1/1' }}\n          ></div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport LayoutContent from '../components/layout-content'\nimport ProductCard from '../components/product-card'\nimport ManufacturerHero from '../components/manufacturer-hero'\nimport type { IManufacturer } from '../types'\nimport { SEO } from '../components/seo'\nimport { ReactMarkdown } from 'react-markdown/lib/react-markdown'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\ntype DataProps = {\n  data: {\n    directus: {\n      manufacturer: IManufacturer\n    }\n  }\n  location: {\n    pathname: string\n  }\n}\n\nconst Manufacturer = ({\n  data: {\n    directus: { manufacturer },\n  },\n}: DataProps) => {\n  return (\n    <Layout>\n      <div className=\"bg-white\">\n        <ManufacturerHero {...manufacturer} />\n        {/* <LayoutContent>\n          <div className=\"block grid-cols-2 gap-6 sm:grid\">\n            <div>\n              <p>Blars</p>\n            </div>\n            <div className=\"pt-6\">\n              <div className=\"grid auto-rows-[200px] grid-cols-3 gap-2\">\n                {[...Array(7)].map((_, i) => (\n                  <div\n                    key={i}\n                    className={`row-span-1 rounded-md border-2 border-slate-400/10 bg-neutral-100 dark:bg-neutral-300 ${\n                      i === 3 || i === 6 ? 'col-span-2' : ''\n                    }`}\n                  >\n                    <GatsbyImage\n                      image={\n                        manufacturer.image_hero.imageFile.childImageSharp\n                          .gatsbyImageData\n                      }\n                      alt=\"hello\"\n                      className=\"object-cover w-full h-full\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </LayoutContent> */}\n        <LayoutContent>\n          <ul\n            role=\"list\"\n            className=\"grid grid-cols-2 gap-3 py-0 md:gap-6 md:grid-cols-3 lg:grid-cols-4 lg:gap-6 lg:py-6\"\n          >\n            <li className=\"flex flex-col col-span-2 py-6 rounded-lg md:col-span-3 lg:col-span-2\">\n              <div className=\"mb-6 text-base leading-tight prose transition max-w-none\">\n                <ReactMarkdown>{manufacturer.description}</ReactMarkdown>\n              </div>\n              <div className=\"flex gap-4\">\n                <a\n                  href={manufacturer.href}\n                  rel=\"noopener\"\n                  target=\"_blank\"\n                  className=\"button\"\n                >\n                  <span className=\"sr-only\">Click here to </span>Visit{' '}\n                  {manufacturer.title}\n                  <span className=\"sr-only\">'s website</span>\n                </a>\n                <Link\n                  to={`/contact/?manufacturer=${manufacturer.title}`}\n                  className=\"button secondary\"\n                >\n                  <span className=\"sr-only\">\n                    Click here to inquire about {manufacturer.title}\n                  </span>\n                  Inquire\n                </Link>\n              </div>\n            </li>\n            {manufacturer.products.map((product) => {\n              return <ProductCard {...product} key={product.id} />\n            })}\n          </ul>\n        </LayoutContent>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Manufacturer\n\nexport const Head = ({\n  data: {\n    directus: { manufacturer },\n  },\n  location,\n}: DataProps) => (\n  <SEO title={`${manufacturer.title}`} pathname={location.pathname} />\n)\n\nexport const pageQuery = graphql`\n  query ManufacturerById($id: ID!) {\n    directus {\n      manufacturer: Manufacturers_by_id(id: $id) {\n        id\n        title\n        slug\n        href\n        description\n        image_hero {\n          id\n          imageFile {\n            childImageSharp {\n              gatsbyImageData(height: 800, width: 1200)\n            }\n          }\n        }\n        tags\n        products(\n          limit: -1\n          sort: \"featured, collection, title\"\n          filter: { status: { _eq: \"published\" } }\n        ) {\n          id\n          title\n          slug\n          image_thumbnail {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData(width: 300, height: 400)\n              }\n            }\n          }\n          tags\n          manufacturer {\n            id\n            title\n            slug\n          }\n          is_new\n        }\n      }\n    }\n  }\n`\n"],"names":["ProductCard","product","React","className","Link","to","manufacturer","slug","GatsbyImage","image","image_thumbnail","imageFile","childImageSharp","gatsbyImageData","alt","title","is_new","ManufacturerHero","description","image_hero","href","ManufacturerLogo","Logos","style","gridArea","_ref","data","directus","Layout","LayoutContent","role","ReactMarkdown","rel","target","products","map","Object","assign","key","id","Head","_ref2","location","SEO","pathname"],"sourceRoot":""}