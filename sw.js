importScripts("workbox-v4.3.1/workbox-sw.js"),workbox.setConfig({modulePathPrefix:"workbox-v4.3.1"}),workbox.core.setCacheNameDetails({prefix:"gatsby-plugin-offline"}),workbox.core.skipWaiting(),workbox.core.clientsClaim(),self.__precacheManifest=[{url:"webpack-runtime-3c9e1e44b3ec20b1e085.js"},{url:"styles.44ececbef03b6c89b839.css"},{url:"app-5fcf3f2bbc3377f43718.js"},{url:"offline-plugin-app-shell-fallback/index.html",revision:"6a779aea3da95872343e12ce5e7af8e6"},{url:"manifest.webmanifest",revision:"20e962438138c53ab54c67b9e62a8506"}].concat(self.__precacheManifest||[]),workbox.precaching.precacheAndRoute(self.__precacheManifest,{}),workbox.routing.registerRoute(/(\.js$|\.css$|static\/)/,new workbox.strategies.CacheFirst,"GET"),workbox.routing.registerRoute(/^https?:.*\/page-data\/.*\.json/,new workbox.strategies.StaleWhileRevalidate,"GET"),workbox.routing.registerRoute(/^https?:.*\.(png|jpg|jpeg|webp|avif|svg|gif|tiff|js|woff|woff2|json|css)$/,new workbox.strategies.StaleWhileRevalidate,"GET"),workbox.routing.registerRoute(/^https?:\/\/fonts\.googleapis\.com\/css/,new workbox.strategies.StaleWhileRevalidate,"GET"),importScripts("idb-keyval-3.2.0-iife.min.js");const{NavigationRoute}=workbox.routing;let lastNavigationRequest=null,offlineShellEnabled=!0;const MessageAPI={setPathResources:(e,{path:t,resources:a})=>{e.waitUntil(idbKeyval.set(`resources:${t}`,a))},clearPathResources:e=>{e.waitUntil(idbKeyval.clear()),e.waitUntil(caches.keys().then(function(t){return Promise.all(t.map(function(a){return a&&a.includes("runtime")?caches.delete(a):Promise.resolve()}))}))},enableOfflineShell:()=>{offlineShellEnabled=!0},disableOfflineShell:()=>{offlineShellEnabled=!1}};self.addEventListener("message",e=>{const{gatsbyApi:t}=e.data;t&&MessageAPI[t](e,e.data)});function handleAPIRequest({event:e}){const{pathname:t}=new URL(e.request.url),a=t.match(/:(.+)/)[1],s={};return a.includes("=")?a.split("&").forEach(i=>{const[r,o]=i.split("=");s[r]=o}):s.api=a,MessageAPI[s.api]!==void 0&&MessageAPI[s.api](),s.redirect?new Response(null,{status:302,headers:{Location:lastNavigationRequest}}):new Response}const navigationRoute=new NavigationRoute(async({event:e})=>{if(e.request.url.match(/\/.gatsby-plugin-offline:.+/))return handleAPIRequest({event:e});if(!offlineShellEnabled)return await fetch(e.request);lastNavigationRequest=e.request.url;let{pathname:t}=new URL(e.request.url);t=t.replace(new RegExp("^"),"");const a=await idbKeyval.get(`resources:${t}`);if(!a||!await caches.match("/app-5fcf3f2bbc3377f43718.js"))return await fetch(e.request);for(const r of a)if(!await caches.match(r))return await fetch(e.request);const i=workbox.precaching.getCacheKeyForURL("/offline-plugin-app-shell-fallback/index.html");return await caches.match(i)});workbox.routing.registerRoute(navigationRoute),workbox.routing.registerRoute(/\/.gatsby-plugin-offline:.+/,handleAPIRequest);
