this.workbox=this.workbox||{},this.workbox.rangeRequests=function(l,s){"use strict";try{self["workbox:range-requests:4.3.1"]&&_()}catch{}async function w(n,t){try{if(t.status===206)return t;const c=n.headers.get("range");if(!c)throw new s.WorkboxError("no-range-header");const g=function(b){const r=b.trim().toLowerCase();if(!r.startsWith("bytes="))throw new s.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:r});if(r.includes(","))throw new s.WorkboxError("single-range-only",{normalizedRangeHeader:r});const e=/(\d*)-(\d*)/.exec(r);if(e===null||!e[1]&&!e[2])throw new s.WorkboxError("invalid-range-values",{normalizedRangeHeader:r});return{start:e[1]===""?null:Number(e[1]),end:e[2]===""?null:Number(e[2])}}(c),d=await t.blob(),o=function(b,r,e){const a=b.size;if(e>a||r<0)throw new s.WorkboxError("range-not-satisfiable",{size:a,end:e,start:r});let i,u;return r===null?(i=a-e,u=a):e===null?(i=r,u=a):(i=r,u=e+1),{start:i,end:u}}(d,g.start,g.end),f=d.slice(o.start,o.end),x=f.size,h=new Response(f,{status:206,statusText:"Partial Content",headers:t.headers});return h.headers.set("Content-Length",x),h.headers.set("Content-Range",`bytes ${o.start}-${o.end-1}/`+d.size),h}catch{return new Response("",{status:416,statusText:"Range Not Satisfiable"})}}return l.createPartialResponse=w,l.Plugin=class{async cachedResponseWillBeUsed({request:n,cachedResponse:t}){return t&&n.headers.has("range")?await w(n,t):t}},l}({},workbox.core._private);
