this.workbox=this.workbox||{},this.workbox.cacheableResponse=function(t,h,o,u,s){"use strict";try{self["workbox:cacheable-response:4.3.1"]&&_()}catch{}class c{constructor(e={}){{if(!(e.statuses||e.headers))throw new h.WorkboxError("statuses-or-headers-required",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor"});e.statuses&&o.assert.isArray(e.statuses,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.statuses"}),e.headers&&o.assert.isType(e.headers,"object",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.headers"})}this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){o.assert.isInstance(e,Response,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"isResponseCacheable",paramName:"response"});let a=!0;if(this._statuses&&(a=this._statuses.includes(e.status)),this._headers&&a&&(a=Object.keys(this._headers).some(r=>e.headers.get(r)===this._headers[r])),!a){s.logger.groupCollapsed(`The request for '${u.getFriendlyURL(e.url)}' returned a response that does not meet the criteria for being cached.`),s.logger.groupCollapsed("View cacheability criteria here."),s.logger.log("Cacheable statuses: "+JSON.stringify(this._statuses)),s.logger.log("Cacheable headers: "+JSON.stringify(this._headers,null,2)),s.logger.groupEnd();const r={};e.headers.forEach((n,d)=>{r[d]=n}),s.logger.groupCollapsed("View response status and headers here."),s.logger.log("Response status: "+e.status),s.logger.log("Response headers: "+JSON.stringify(r,null,2)),s.logger.groupEnd(),s.logger.groupCollapsed("View full response details here."),s.logger.log(e.headers),s.logger.log(e),s.logger.groupEnd(),s.logger.groupEnd()}return a}}class i{constructor(e){this._cacheableResponse=new c(e)}cacheWillUpdate({response:e}){return this._cacheableResponse.isResponseCacheable(e)?e:null}}return t.CacheableResponse=c,t.Plugin=i,t}({},workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private);
