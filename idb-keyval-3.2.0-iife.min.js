var idbKeyval=function(o){"use strict";class l{constructor(t="keyval-store",e="keyval"){this.storeName=e,this._dbp=new Promise((s,a)=>{const n=indexedDB.open(t,1);n.onerror=()=>a(n.error),n.onsuccess=()=>s(n.result),n.onupgradeneeded=()=>{n.result.createObjectStore(e)}})}_withIDBStore(t,e){return this._dbp.then(s=>new Promise((a,n)=>{const u=s.transaction(this.storeName,t);u.oncomplete=()=>a(),u.onabort=u.onerror=()=>n(u.error),e(u.objectStore(this.storeName))}))}}let c;function i(){return c||(c=new l),c}return o.Store=l,o.get=function(r,t=i()){let e;return t._withIDBStore("readonly",s=>{e=s.get(r)}).then(()=>e.result)},o.set=function(r,t,e=i()){return e._withIDBStore("readwrite",s=>{s.put(t,r)})},o.del=function(r,t=i()){return t._withIDBStore("readwrite",e=>{e.delete(r)})},o.clear=function(r=i()){return r._withIDBStore("readwrite",t=>{t.clear()})},o.keys=function(r=i()){const t=[];return r._withIDBStore("readonly",e=>{(e.openKeyCursor||e.openCursor).call(e).onsuccess=function(){this.result&&(t.push(this.result.key),this.result.continue())}}).then(()=>t)},o}({});
